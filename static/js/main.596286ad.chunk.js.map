{"version":3,"sources":["components/Input/index.jsx","components/Plot/index.jsx","components/utils.js","components/MainView/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","name","type","onChange","value","error","className","style","borderColor","placeholder","e","target","drawAxis","ctx","beginPath","strokeStyle","moveTo","height","lineTo","stroke","width","font","fillText","lineWidth","i","drawGraphic","points","lastItem","length","firstItem","maxFx","fx","maxX","x","xCellSize","fxCellSize","clearRect","save","textBaseline","textAlign","translate","restore","Plot","expression","from","to","setIsValid","expr","replace","split","reduce","acc","arr","push","join","canvasRef","useRef","fn","Function","Number","useEffect","context","current","getContext","ref","allowedSymbols","MainView","useState","wolfram","setWolfram","setExpression","rangeFrom","setRangeFrom","rangeTo","setRangeTo","isValid","load","setLoad","checkExpression","every","r","indexOf","parseExpression","wolframExpressin","wolframLink","inputsFilled","checked","alt","src","onLoad","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.596286ad.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nconst Input = ({ name, type, onChange, value, error }) => (\n  <div className=\"container\">\n    <span>{name}</span>\n    <input\n      value={value}\n      style={{\n        borderColor: error && \"red\",\n      }}\n      type={type}\n      placeholder={name}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  </div>\n);\n\nexport default Input;\n","import React, { useRef, useEffect } from \"react\";\n\nconst width = 400;\nconst height = 400;\n\nconst Plot = ({ expression, from, to, setIsValid }) => {\n  const expr = `return ${expression\n    .replace(\"sqrt\", \"Math.sqrt\")\n    .replace(\"^\", \"**\")\n    .split(\"\")\n    .reduce((acc, x, i, arr) => {\n      arr[i + 1] === \"+\" ? acc.push(`Number(${x})`) : acc.push(x);\n      return acc;\n    }, [])\n    .join(\"\")}`;\n  const canvasRef = useRef(null);\n\n  let fn = () => {};\n  const points = [];\n\n  try {\n    fn = new Function(\"x\", expr);\n    for (let i = from; to >= i; i++) {\n      points.push({ x: Number(i), fx: fn(i) });\n    }\n  } catch (e) {\n    setIsValid(false);\n  }\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    drawAxis(context);\n    if (!!points.length) {\n      drawGraphic(context, points);\n    }\n  }, [canvasRef, expression, from, to, points]);\n\n  return <canvas ref={canvasRef} height={height} width={width} />;\n};\n\nconst drawAxis = (ctx) => {\n  ctx.beginPath();\n  ctx.strokeStyle = \"black\";\n  ctx.moveTo(0, height / 2);\n  ctx.lineTo(width, height / 2);\n  ctx.stroke();\n  ctx.moveTo(width / 2, 0);\n  ctx.lineTo(width / 2, height);\n  ctx.stroke();\n\n  ctx.font = \"14px arial\";\n  ctx.fillText(\"x\", width - 15, height / 2 + 15);\n  ctx.fillText(\"f(x)\", width / 2 - 30, 15);\n  ctx.fillText(\"0\", width / 2 - 12, height / 2 + 15);\n\n  ctx.lineWidth = 0.5;\n  ctx.strokeStyle = \"black\";\n  for (let i = 0; i <= 20; i++) {\n    ctx.moveTo((width / 20) * i + 0.5, height / 2 - 5);\n    ctx.lineTo((width / 20) * i + 0.5, height / 2 + 5);\n  }\n  ctx.stroke();\n\n  ctx.lineWidth = 0.5;\n  ctx.strokeStyle = \"black\";\n  for (let i = 0; i <= 20; i++) {\n    ctx.moveTo(width / 2 - 5, (height / 20) * i + 0.5);\n    ctx.lineTo(width / 2 + 5, (height / 20) * i + 0.5);\n  }\n  ctx.stroke();\n};\n\nconst drawGraphic = (ctx, points) => {\n  const lastItem = points[points.length - 1];\n  const firstItem = points[0];\n  const maxFx = lastItem.fx;\n  const maxX = lastItem.x;\n  const xCellSize = 1 / (maxX / (width / 2));\n  const fxCellSize = 1 / (maxFx / (height / 2));\n\n  ctx.clearRect(0, 0, width, height);\n  drawAxis(ctx);\n  ctx.save();\n  ctx.font = \"14px arial\";\n  ctx.textBaseline = \"top\";\n  ctx.textAlign = \"right\";\n  ctx.fillText(maxX, width - 8, height / 2 - 20);\n  ctx.textBaseline = \"top\";\n  ctx.textAlign = \"left\";\n  ctx.fillText(maxFx, width / 2 + 8, 5);\n  ctx.textBaseline = \"top\";\n  ctx.textAlign = \"left\";\n  ctx.fillText(`-${maxX}`, 2, height / 2 - 20);\n  ctx.textBaseline = \"bottom\";\n  ctx.textAlign = \"right\";\n  ctx.fillText(`-${maxFx}`, width / 2 - 8, height);\n\n  ctx.translate(width / 2, height / 2);\n\n  ctx.beginPath();\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = \"blue\";\n  ctx.moveTo(firstItem.x * xCellSize, -firstItem.fx * fxCellSize);\n  for (let i = 0; i < points.length; i++) {\n    ctx.lineTo(points[i].x * xCellSize, -points[i].fx * fxCellSize);\n  }\n  ctx.stroke();\n\n  ctx.restore();\n};\n\nexport default Plot;\n","export const appId = \"GRKYPK-JEAA8LAV27\";\nexport const allowedSymbols = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"-\",\n  \"+\",\n  \"/\",\n  \"*\",\n  \"^\",\n  \"(\",\n  \")\",\n  \"x\",\n];\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../Input\";\nimport Plot from \"../Plot\";\n\nimport \"./index.css\";\n\nimport { appId, allowedSymbols } from \"../utils\";\n\nconst MainView = () => {\n  const [wolfram, setWolfram] = useState(false);\n  const [expression, setExpression] = useState(\"\");\n  const [rangeFrom, setRangeFrom] = useState(\"\");\n  const [rangeTo, setRangeTo] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const [load, setLoad] = useState(false);\n\n  useEffect(() => {\n    checkExpression();\n  }, [expression]);\n\n  const checkExpression = () => {\n    const expr = expression.replace(/(sqrt\\(.*\\))/, \"\");\n    const found = expr.split(\"\").every((r) => allowedSymbols.indexOf(r) >= 0);\n    if (found) {\n      setIsValid(true);\n      parseExpression();\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const parseExpression = () => {\n    const expr = `return ${expression\n      .replace(\"sqrt\", \"Math.sqrt\")\n      .replace(\"^\", \"**\")}`;\n    try {\n      new Function(\"x\", expr);\n      setIsValid(true);\n    } catch (e) {\n      setIsValid(false);\n    }\n  };\n\n  const onChange = () => {\n    setWolfram(!wolfram);\n    setLoad(false);\n  };\n\n  const wolframExpressin = expression.replace(/\\+/g, \"%2B\");\n  const wolframLink = `http://api.wolframalpha.com/v2/simple?appid=${appId}&i=plot+${wolframExpressin}+from+x=${rangeFrom}\n  +to+${rangeTo}%3F`;\n  const inputsFilled = expression && rangeFrom && rangeTo;\n\n  return (\n    <div className=\"main-container\">\n      <h1>function plotter</h1>\n      <div className=\"inputs-container\">\n        <Input\n          type=\"expression\"\n          name=\"Expression\"\n          value={expression}\n          onChange={setExpression}\n          error={!isValid}\n        />\n        <Input\n          type=\"number\"\n          name=\"X Range From\"\n          value={rangeFrom}\n          onChange={setRangeFrom}\n        />\n        <Input\n          type=\"number\"\n          name=\"X Range To\"\n          value={rangeTo}\n          onChange={setRangeTo}\n        />\n      </div>\n      <div className=\"toggle-container\">\n        <span>Use WolframAlpha API</span>\n        <label className=\"switch\">\n          <input type=\"checkbox\" checked={wolfram} onChange={onChange} />\n          <div className=\"slider\"></div>\n        </label>\n      </div>\n      {inputsFilled && isValid ? (\n        wolfram ? (\n          <>\n            {!load && <div>Loading...</div>}\n            <img alt=\"\" src={wolframLink} onLoad={() => setLoad(true)} />\n          </>\n        ) : (\n          <Plot\n            expression={expression}\n            from={rangeFrom}\n            to={rangeTo}\n            setIsValid={setIsValid}\n          />\n        )\n      ) : (\n        <div>Please enter valid data</div>\n      )}\n    </div>\n  );\n};\n\nexport default MainView;\n","import React from \"react\";\nimport MainView from \"./components/MainView\";\n\nconst App = () => {\n  return <MainView />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}